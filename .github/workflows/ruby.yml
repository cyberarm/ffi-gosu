name: Ruby CI

on:
  push:
    branches: [master]
  pull_request:

env:
  GOSU_GIT_BRANCH: master

jobs:
  test:
    strategy:
      matrix:
        platform: [ubuntu-22.04, ubuntu-latest, windows-latest]
        ruby-version: ['3.0', '3.1', '3.2', 'head']
    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v3


    - name: Install Gosu dependencies (Ubuntu)
      if: startsWith(matrix.platform, 'ubuntu-')
      run: |
        sudo apt-get update && sudo apt-get install -y libsdl2-dev libgl1-mesa-dev libfontconfig1-dev xvfb

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: false # runs 'bundle install' and caches installed gems automatically

    - name: Add msbuild to PATH (Windows)
      if: startsWith(matrix.platform, 'windows-')
      uses: microsoft/setup-msbuild@v1.1

    - name: Fetch Gosu
      run: |
        echo $PWD
        cd ..
        git clone --depth=1 --single-branch --branch ${{ env.GOSU_GIT_BRANCH }} https://github.com/gosu/gosu

    - name: Build and install Gosu (Linux)
      if: startsWith(matrix.platform, 'ubuntu-')
      run: |
        echo $PWD
        cd ../gosu

        mkdir -p build
        cd build
        cmake -D CMAKE_INSTALL_PREFIX:PATH=/usr ..
        make
        sudo make install

    - name: Build Gosu with msbuild (Windows)
      if: startsWith(matrix.platform, 'windows-')
      run: |
        echo $PWD

        cd ..
        cd gosu

        msbuild windows/Gosu.sln /property:Configuration=Release

    - name: Install dependencies
      run: gem install bundler && bundle install --jobs 4 --retry 3

    - name: Run tests (Linux)
      if: startsWith(matrix.platform, 'ubuntu-')
      run: |
        sudo usermod -a -G audio $USER

        xvfb-run bundle exec rake

    - name: Run tests (Windows)
      if: startsWith(matrix.platform, 'windows-')
      run: bundle exec rake
